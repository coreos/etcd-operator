#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

if [ -z "${PASSES-}" ]; then
	PASSES="fmt build e2e"
fi

find_files() {
  find . -not \( \
      \( \
        -wholename './_output' \
        -o -wholename '*/vendor/*' \
      \) -prune \
    \) -name '*.go'
}

function fmt_pass {
	allfiles=$(find_files)
	echo "Checking gofmt..."
	for file in $allfiles; do
		checkRes=$(gofmt -l -s -d $file)
		if [ -n "${checkRes}" ]; then
			echo -e "gofmt checking failed:\n${checkRes}"
			exit 255
		fi
	done

	echo "Checking govet..."
	for file in $allfiles; do
		checkRes=$(go vet $file)
		if [ -n "${checkRes}" ]; then
			echo -e "go vet checking failed:\n${checkRes}"
			exit 255
		fi
	done
}

function build_pass {
	IMAGE=$OPERATOR_IMAGE hack/build/operator/build
	IMAGE=$BACKUP_IMAGE hack/build/backup/build
}

function e2e_pass {
	TEST_PKGS=`go list ./test/... | grep -v framework`
	go test -v ${TEST_PKGS} --kubeconfig $KUBERNETES_KUBECONFIG_PATH \
		--operator-image $OPERATOR_IMAGE --backup-image $BACKUP_IMAGE --namespace ${TEST_NAMESPACE}
}

for p in $PASSES; do
	${p}_pass
done

echo "test success ==="
