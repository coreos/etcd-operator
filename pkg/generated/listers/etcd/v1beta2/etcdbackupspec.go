/*
Copyright 2017 The etcd-operator Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package v1beta2

import (
	v1beta2 "github.com/coreos/etcd-operator/pkg/apis/etcd/v1beta2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// EtcdBackupSpecLister helps list EtcdBackupSpecs.
type EtcdBackupSpecLister interface {
	// List lists all EtcdBackupSpecs in the indexer.
	List(selector labels.Selector) (ret []*v1beta2.EtcdBackupSpec, err error)
	// EtcdBackupSpecs returns an object that can list and get EtcdBackupSpecs.
	EtcdBackupSpecs(namespace string) EtcdBackupSpecNamespaceLister
	EtcdBackupSpecListerExpansion
}

// etcdBackupSpecLister implements the EtcdBackupSpecLister interface.
type etcdBackupSpecLister struct {
	indexer cache.Indexer
}

// NewEtcdBackupSpecLister returns a new EtcdBackupSpecLister.
func NewEtcdBackupSpecLister(indexer cache.Indexer) EtcdBackupSpecLister {
	return &etcdBackupSpecLister{indexer: indexer}
}

// List lists all EtcdBackupSpecs in the indexer.
func (s *etcdBackupSpecLister) List(selector labels.Selector) (ret []*v1beta2.EtcdBackupSpec, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.EtcdBackupSpec))
	})
	return ret, err
}

// EtcdBackupSpecs returns an object that can list and get EtcdBackupSpecs.
func (s *etcdBackupSpecLister) EtcdBackupSpecs(namespace string) EtcdBackupSpecNamespaceLister {
	return etcdBackupSpecNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// EtcdBackupSpecNamespaceLister helps list and get EtcdBackupSpecs.
type EtcdBackupSpecNamespaceLister interface {
	// List lists all EtcdBackupSpecs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta2.EtcdBackupSpec, err error)
	// Get retrieves the EtcdBackupSpec from the indexer for a given namespace and name.
	Get(name string) (*v1beta2.EtcdBackupSpec, error)
	EtcdBackupSpecNamespaceListerExpansion
}

// etcdBackupSpecNamespaceLister implements the EtcdBackupSpecNamespaceLister
// interface.
type etcdBackupSpecNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all EtcdBackupSpecs in the indexer for a given namespace.
func (s etcdBackupSpecNamespaceLister) List(selector labels.Selector) (ret []*v1beta2.EtcdBackupSpec, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.EtcdBackupSpec))
	})
	return ret, err
}

// Get retrieves the EtcdBackupSpec from the indexer for a given namespace and name.
func (s etcdBackupSpecNamespaceLister) Get(name string) (*v1beta2.EtcdBackupSpec, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta2.Resource("etcdbackupspec"), name)
	}
	return obj.(*v1beta2.EtcdBackupSpec), nil
}
